#using System.Text
#using Goedel.Mesh
#using Goedel.Mesh.Shell
#using Goedel.Protocol
#xclass MakeSiteDocs MakeSiteDocs



#file WebKey "Guide/key.md" CreateWeb Index

## Using the Key Command Set

The Key command set contains commands that operate on cryptographic keys and
nonces.

Keys and nonces may be generated with any desired precision 


#end file

#file KeyReference "Reference/key.md" CreateWeb Index
#% var CommandSet = CommandLineInterpreter.DescribeCommandSet_Profile;

#% Describe(_Output, CommandSet);




#% Describe(_Output, CommandSet, _KeyNonce._DescribeCommand);


The `nonce` command returns a randomized nonce value formatted as a UDF nonce type.

Nonce values should be used when it is important that a value be unpredictable but 
does not need to be kept secret. For example, the challenge in a challenge/response
protocol.



#% Describe(_Output, CommandSet, _KeySecret._DescribeCommand);

The `secret` command returns a randomized secret value formatted as a UDF Encryption 
key type.


#% Describe(_Output, CommandSet, _KeyEarl._DescribeCommand);

The `earl` command returns a randomized secret value and a fingerprint of the secret 
value, formatted as a UDF Encryption key type and Content Digest Type

#% Describe(_Output, CommandSet, _KeyShare._DescribeCommand);

The `share` command returns a randomized secret value and a set of shares for the secret
formatted as a UDF Encryption key type and Share types

#% Describe(_Output, CommandSet, _KeyRecover._DescribeCommand);

The `recover` command combines the specified set of share to recover the original secret 
value as a UDF Encryption key type.

#end file

#end xclass

